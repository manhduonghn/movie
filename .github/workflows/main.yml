name: Build & Release Expo APK

on:
  workflow_dispatch:

jobs:
  build-apk:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: ‚òï Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: ‚ôªÔ∏è Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('android/**/*.gradle*') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: üì¶ Install Expo CLI
        run: npm install -g expo-cli

      - name: üì¶ Install dependencies
        run: npx expo install

      - name: üì¶ Ensure core Expo deps
        run: npx expo install expo-asset expo-file-system expo-font

      - name: üñºÔ∏è Optimize assets
        run: npx expo-optimize --non-interactive

      - name: üß± Prebuild native project
        run: npx expo prebuild --non-interactive

      - name: üßπ Clean Gradle cache
        working-directory: android
        run: ./gradlew clean
        continue-on-error: true
        
      - name: üîß Patch build.gradle
        working-directory: android/app
        run: |
          echo "Patching build.gradle for arm64-v8a + Hermes + shrink..."
          cp build.gradle build.gradle.bak
          perl -0777 -pe 's/(android\s*\{)/$1\n    splits {\n        abi {\n            enable true\n            reset()\n            include "arm64-v8a"\n            universalApk false\n        }\n    }\n/s' -i build.gradle
          perl -0777 -pe 's/project\.ext\.react\s*=\s*\[/$&\n    enableHermes: true,/' -i build.gradle
          perl -0777 -pe 's/buildTypes\s*\{/$&\n    release {\n        minifyEnabled true\n        shrinkResources true\n        proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"\n    }\n/' -i build.gradle

      - name: üßæ Ensure metro.config.js
        run: |
          echo "const { getDefaultConfig } = require('expo/metro-config');" > metro.config.js
          echo "module.exports = getDefaultConfig(__dirname);" >> metro.config.js

      - name: üß© Install CLI deps
        run: npm install --save-dev @react-native-community/cli @react-native/metro-config

      - name: üì¶ Bundle JS for Android
        run: |
          mkdir -p android/app/src/main/assets
          npx react-native bundle \
            --platform android \
            --dev false \
            --minify true \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res/

      - name: üèóÔ∏è Build and sign release APK
        working-directory: android
        run: |
          echo "storePassword=public" > keystore.properties
          echo "keyPassword=public" >> keystore.properties
          echo "keyAlias=public" >> keystore.properties
          echo "storeFile=public.jks" >> keystore.properties
          ./gradlew assembleRelease --no-daemon --build-cache --stacktrace

      - name: üì§ Find and rename signed APK
        id: findapk
        run: |
          apk_path=$(find android/app/build/outputs/apk/release -type f -name "*arm64*.apk" -print -quit)
          if [ -z "$apk_path" ]; then
            apk_path=$(find android/app/build/outputs/apk/release -type f -name "*.apk" -print -quit)
          fi
          echo "‚úÖ Found APK: $apk_path"
          
          version_tag="v${{ github.run_number }}"
          new_name="movie-${version_tag}-arm64_v8a.apk"
          new_path="$(dirname "$apk_path")/$new_name"
          
          mv "$apk_path" "$new_path"
          echo "üì¶ Renamed to: $new_name"
          echo "artifact_path=$new_path" >> $GITHUB_OUTPUT

      - name: üè∑Ô∏è Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.findapk.outputs.artifact_path }}
          tag_name: v${{ github.run_number }}
          name: "Release v${{ github.run_number }} (arm64, Hermes)"
          body_path: release.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
